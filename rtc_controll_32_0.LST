C51 COMPILER V9.03   RTC_CONTROLL_32_0                                                     08/07/2013 13:58:04 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE RTC_CONTROLL_32_0
OBJECT MODULE PLACED IN rtc_controll_32_0.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE rtc_controll_32_0.c COMPACT ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          
   3                      //////////////////////////////////////////////////////////////////
   4                                  /////     R T C        E N D L I N G      ////////////////////////
   5                                  //////////////////////////////////////////////////////////////////
   6          
   7          
   8          //-----------------------------------------------------------------------------
   9          // Function PROTOTYPES
  10          //-----------------------------------------------------------------------------
  11          void            Numb_2_BCD                      (char);
  12          void            Update_RTC                      (void);
  13          void            BCD_2_NUMB                      (char);
  14          void            Update_TimeDate         (void);    
  15          char            Fetch_SPI                       (char);
  16          void            RTC_chanal                      (char);
  17          //void          Close_RTC                       (void);
  18          void            Delay                           (unsigned char);
  19          
  20          //----------------------------------------------------------------            
  21          // Global Variables
  22          //-------------------------------------------------------------------------     
  23                                  
  24          
  25          extern char pdata DateTime[10]; //={8,5,3,2,7,5,2,1,1,3};               // m,10m,H,10H,Y,10Y,M,10M,D,10D
  26          extern char Feed_Time;
  27          extern unsigned int Volume ;
  28          extern unsigned long Sub_Volume;
  29          //////////////////////////////////
  30          //// translat from char to BCD 
  31          //////////////////////////////////
  32          
  33          //
  34          
  35          void Numb_2_BCD (char Num)
  36          {
  37   1      char ezer;
  38   1      
  39   1              ezer = ((DateTime[Num])& 0x0f);                 
  40   1              ezer = ezer << 4;
  41   1              ezer = ezer + ((DateTime[Num-1]& 0x0f));                
  42   1              Fetch_SPI (ezer);                                                               
  43   1      
  44   1      }
  45          
  46          ///////////////////////////////////////////////////////////////////////
  47          ///////////  UP DATE in RTC
  48          ///////////////////////////////////////////////////////////
  49          
  50          void Update_RTC (void)
  51          {
  52   1      //      SPI0CFG   = 0x60;       // configer SPI to 01 mode 
  53   1      //// m,10m,H,10H,Y,10Y,M,10M,D,10D
  54   1              RTC_chanal(1);           // open SPI RTc chanell
  55   1              Delay(2);
C51 COMPILER V9.03   RTC_CONTROLL_32_0                                                     08/07/2013 13:58:04 PAGE 2   

  56   1              Fetch_SPI (0x13);
  57   1              Numb_2_BCD (1);         // minute
  58   1              Numb_2_BCD (3);         //  hour
  59   1              Numb_2_BCD (9);         // DAY
  60   1              Numb_2_BCD (7);         // D A M Y
  61   1              Numb_2_BCD (7);         // MONTH
  62   1              Numb_2_BCD (5);         // years
  63   1              Delay(2);                       
  64   1              RTC_chanal(0);                   // CLOSE RTC
  65   1      }                                                                                                                                       
  66                                                                                                                                  
  67          //////////////////////////////////
  68          //// translat BCD to CHAR
  69          //////////////////////////////////
  70          
  71          
  72          void BCD_2_NUMB (char Num)
  73          {
  74   1      char ezer;
  75   1      
  76   1      
  77   1              ezer = Fetch_SPI(0);
  78   1              DateTime[Num] = (ezer & 0x0f);
  79   1              DateTime[Num+1] = ((ezer >> 4)& 0x0f);
  80   1      
  81   1      
  82   1      ///////////////////////////////////////////////////////////////////////////////////////
  83   1      //////////////////////////////////////////////////////////////////////////////////////////
  84   1              if(DateTime[6]>2 && Feed_Time >6)Sub_Volume=Sub_Volume/2;               //GROZINI//
  85   1      ///////////////////////////////////////////////////////////////////////////////////
  86   1      /////////////===============================//////////////////////////////////////////  
  87   1      }
  88          
  89           ////////////////////////////////////////////////////////////////////////
  90          ///////////  UPDATE monitor
  91          ///////////////////////////////////////////////////////////
  92          
  93          void Update_TimeDate (void)
  94          {
  95   1      
  96   1              //// m,10m,H,10H,Y,10Y,M,10M,D,10D
  97   1      //      SPI0CFG   = 0x60;       // configer SPI to 01 mode                                                                       &
  98   1              RTC_chanal(1);           // open SPI RTS chanell
  99   1              Delay(2);
 100   1              Fetch_SPI (0x93);        // command read clock reg minutes (3)
 101   1              BCD_2_NUMB(0);  //minutes
 102   1              BCD_2_NUMB(2);  //hour
 103   1              BCD_2_NUMB(8);  //  day
 104   1              BCD_2_NUMB(6);  //D A M Y
 105   1              BCD_2_NUMB(6);  //month
 106   1              BCD_2_NUMB(4);  //year
 107   1              Delay(2);
 108   1              RTC_chanal(0);                   // CLOSE RTC
 109   1              
 110   1      }
 111          
 112          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.03   RTC_CONTROLL_32_0                                                     08/07/2013 13:58:04 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
